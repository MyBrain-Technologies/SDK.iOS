{"Structs/MBTBluetoothA2DP.html#/s:ZvV22MyBrainTechnologiesSDK16MBTBluetoothA2DP20audioSingServiceUUIDCSo6CBUUID":{"name":"audioSingServiceUUID","abstract":"<p>The <em>UUID</em> of Audio Sink.</p>","parent_name":"MBTBluetoothA2DP"},"Structs/MBTBluetoothA2DP.html#/s:ZvV22MyBrainTechnologiesSDK16MBTBluetoothA2DP24remoteControlServiceUUIDCSo6CBUUID":{"name":"remoteControlServiceUUID","abstract":"<p>The <em>UIID</em> of the A/V Remote Control.</p>","parent_name":"MBTBluetoothA2DP"},"Structs/MBTBluetoothA2DP.html#/s:ZvV22MyBrainTechnologiesSDK16MBTBluetoothA2DP3uidGSQSS_":{"name":"uid","abstract":"<p>Specific MBT Headset A2DP UID</p>","parent_name":"MBTBluetoothA2DP"},"Structs/MBTBluetoothLE.html#/s:ZvV22MyBrainTechnologiesSDK14MBTBluetoothLEP33_781446DBBBB4513EE6E6E675CC7D272518myBrainServiceUUIDCSo6CBUUID":{"name":"myBrainServiceUUID","abstract":"<p>The <em>UUID</em> of the MyBrainServices.</p>","parent_name":"MBTBluetoothLE"},"Structs/MBTBluetoothLE.html#/s:ZvV22MyBrainTechnologiesSDK14MBTBluetoothLE21deviceInfoServiceUUIDCSo6CBUUID":{"name":"deviceInfoServiceUUID","abstract":"<p>The <em>UUID</em> of the DeviceInformation service.</p>","parent_name":"MBTBluetoothLE"},"Structs/MBTBluetoothLE.html#/s:ZvV22MyBrainTechnologiesSDK14MBTBluetoothLE28brainActivityMeasurementUUIDCSo6CBUUID":{"name":"brainActivityMeasurementUUID","abstract":"<p>The <em>UUID</em> of the brainActivityMeasurement","parent_name":"MBTBluetoothLE"},"Structs/MBTBluetoothLE.html#/s:ZvV22MyBrainTechnologiesSDK14MBTBluetoothLE38brainActivityMeasurementCharacteristicGSQCSo16CBCharacteristic_":{"name":"brainActivityMeasurementCharacteristic","abstract":"<p>The <em>characteristic</em> of the Measurement service.</p>","parent_name":"MBTBluetoothLE"},"Structs/MBTBluetoothLE.html#/s:ZFV22MyBrainTechnologiesSDK14MBTBluetoothLE16getServicesUUIDsFT_GSaCSo6CBUUID_":{"name":"getServicesUUIDs()","abstract":"<p>Getter of Bluetooth LE Services UUIDs.</p>","parent_name":"MBTBluetoothLE"},"Structs/MBTBluetoothLE.html":{"name":"MBTBluetoothLE","abstract":"<p>Help MBTBluetoothManager to manage Bluetooth Low Energy ( BLE ).</p>"},"Structs/MBTBluetoothA2DP.html":{"name":"MBTBluetoothA2DP","abstract":"<p>Help MBTBluetoothManager to manage Bluetooth A2DP (audio).</p>"},"Protocols/MBTBluetoothEventDelegate.html#/s:FP22MyBrainTechnologiesSDK25MBTBluetoothEventDelegate23onConnectionEstablishedFT_T_":{"name":"onConnectionEstablished()","abstract":"<p>Called when the headset has been connected","parent_name":"MBTBluetoothEventDelegate"},"Protocols/MBTBluetoothEventDelegate.html#/s:FP22MyBrainTechnologiesSDK25MBTBluetoothEventDelegate23onBluetoothStatusUpdateFSbT_":{"name":"onBluetoothStatusUpdate(_:)","abstract":"<p>Called each time the BLE status change.","parent_name":"MBTBluetoothEventDelegate"},"Protocols/MBTBluetoothEventDelegate.html#/s:FP22MyBrainTechnologiesSDK25MBTBluetoothEventDelegate18onConnectionFailedFGSqPs5Error__T_":{"name":"onConnectionFailed(_:)","abstract":"<p>Called if the SDK can&rsquo;t connect to the MBT Headset,","parent_name":"MBTBluetoothEventDelegate"},"Protocols/MBTBluetoothEventDelegate.html#/s:FP22MyBrainTechnologiesSDK25MBTBluetoothEventDelegate15onConnectionOffFGSqPs5Error__T_":{"name":"onConnectionOff(_:)","abstract":"<p>Called when the headset lost connection.</p>","parent_name":"MBTBluetoothEventDelegate"},"Protocols/MBTAcquisitionDelegate.html#/s:FP22MyBrainTechnologiesSDK22MBTAcquisitionDelegate18onReceivingPackageFGVs10DictionarySSP__T_":{"name":"onReceivingPackage(_:)","abstract":"<p>Called to each EEG package sent by the BLE.</p>","parent_name":"MBTAcquisitionDelegate"},"Protocols/MBTAcquisitionDelegate.html#/s:FP22MyBrainTechnologiesSDK22MBTAcquisitionDelegate23onReceivingBatteryLevelFV10Foundation12NotificationT_":{"name":"onReceivingBatteryLevel(_:)","abstract":"<p>Called when getting the battery level.</p>","parent_name":"MBTAcquisitionDelegate"},"Protocols/MBTAcquisitionDelegate.html#/s:FP22MyBrainTechnologiesSDK22MBTAcquisitionDelegate28onReceivingDeviceInformationFV10Foundation4DataT_":{"name":"onReceivingDeviceInformation(_:)","abstract":"<p>Called when getting Device Information.</p>","parent_name":"MBTAcquisitionDelegate"},"Protocols/MBTBluetoothA2DPDelegate.html#/s:FP22MyBrainTechnologiesSDK24MBTBluetoothA2DPDelegate19audioA2DPDidConnectFT_T_":{"name":"audioA2DPDidConnect()","abstract":"<p>Called when the MBT Headset audio A2DP get connected.</p>","parent_name":"MBTBluetoothA2DPDelegate"},"Protocols/MBTBluetoothA2DPDelegate.html#/s:FP22MyBrainTechnologiesSDK24MBTBluetoothA2DPDelegate22audioA2DPDidDisconnectFT_T_":{"name":"audioA2DPDidDisconnect()","abstract":"<p>Called when the MBT Headset audio A2DP lost connection.</p>","parent_name":"MBTBluetoothA2DPDelegate"},"Protocols/MBTBluetoothA2DPDelegate.html":{"name":"MBTBluetoothA2DPDelegate","abstract":"<p>Delegate to know if audio A2DP just connected or disconnected.</p>"},"Protocols/MBTAcquisitionDelegate.html":{"name":"MBTAcquisitionDelegate","abstract":"<p>Manage the acquisition data communication outside the SDK.</p>"},"Protocols.html#/s:P22MyBrainTechnologiesSDK22MelomindEngineDelegate":{"name":"MelomindEngineDelegate","abstract":"<p>General delegate of the SDK for MelomindEngine."},"Protocols/MBTBluetoothEventDelegate.html":{"name":"MBTBluetoothEventDelegate","abstract":"<p>Event handler of the MBT Headset.</p>"},"Classes/MelomindEngine.html#/s:ZvC22MyBrainTechnologiesSDK14MelomindEngine16bluetoothManagerCS_19MBTBluetoothManager":{"name":"bluetoothManager","abstract":"<p>Init a MBTBluetoothManager, which deals with","parent_name":"MelomindEngine"},"Classes/MelomindEngine.html#/s:ZvC22MyBrainTechnologiesSDK14MelomindEngine17acqusitionManagerCS_21MBTAcquisitionManager":{"name":"acqusitionManager","abstract":"<p>Init a MBTAcquisitionManager, which deals with","parent_name":"MelomindEngine"},"Classes/MelomindEngine.html#/s:ZFC22MyBrainTechnologiesSDK14MelomindEngine10connectEEGFT12withDelegatePS_22MelomindEngineDelegate__T_":{"name":"connectEEG(withDelegate:)","abstract":"<p>Connect to bluetooth LE profile of the MBT headset.","parent_name":"MelomindEngine"},"Classes/MelomindEngine.html#/s:ZFC22MyBrainTechnologiesSDK14MelomindEngine17connectEEGAndA2DPFT12withDelegatePS_22MelomindEngineDelegate__T_":{"name":"connectEEGAndA2DP(withDelegate:)","abstract":"<p>Connect to the audio part of the MBT Headset (using the A2DP","parent_name":"MelomindEngine"},"Classes/MelomindEngine.html#/s:ZFC22MyBrainTechnologiesSDK14MelomindEngine10disconnectFT_T_":{"name":"disconnect()","abstract":"<p>Disconnect the iDevice from the headset</p>","parent_name":"MelomindEngine"},"Classes/MelomindEngine.html#/s:ZFC22MyBrainTechnologiesSDK14MelomindEngine11startStreamFT_T_":{"name":"startStream()","abstract":"<p>Start streaming EEG Data from MyBrainActivity Characteristic.</p>","parent_name":"MelomindEngine"},"Classes/MelomindEngine.html#/s:ZFC22MyBrainTechnologiesSDK14MelomindEngine11stropStreamFT_T_":{"name":"stropStream()","abstract":"<p>Stop streaming EEG Data to MelomineEngineDelegate.</p>","parent_name":"MelomindEngine"},"Classes/MBTAcquisitionManager.html#/s:vC22MyBrainTechnologiesSDK21MBTAcquisitionManager8delegateGSQPS_22MBTAcquisitionDelegate__":{"name":"delegate","abstract":"<p>The MBTBluetooth Event Delegate.</p>","parent_name":"MBTAcquisitionManager"},"Classes/MBTAcquisitionManager.html#/s:vC22MyBrainTechnologiesSDK21MBTAcquisitionManager5constSd":{"name":"const","abstract":"<p>The multiplicative constant.</p>","parent_name":"MBTAcquisitionManager"},"Classes/MBTAcquisitionManager.html#/s:vC22MyBrainTechnologiesSDK21MBTAcquisitionManager14voltageADS1299Sf":{"name":"voltageADS1299","abstract":"<p>Constant to decod EEG data</p>","parent_name":"MBTAcquisitionManager"},"Classes/MBTAcquisitionManager.html#/s:FC22MyBrainTechnologiesSDK21MBTAcquisitionManager24processBrainActivityDataFV10Foundation4DataT_":{"name":"processBrainActivityData(_:)","abstract":"<p>Process the brain activty measurement received and return the processed data.</p>","parent_name":"MBTAcquisitionManager"},"Classes/MBTAcquisitionManager.html#/s:FC22MyBrainTechnologiesSDK21MBTAcquisitionManager25processDeviceInformationsFV10Foundation4DataT_":{"name":"processDeviceInformations(_:)","abstract":"<p>Process the Device Information data</p>","parent_name":"MBTAcquisitionManager"},"Classes/MBTBluetoothManager.html#/s:vC22MyBrainTechnologiesSDK19MBTBluetoothManager14centralManagerGSQCSo16CBCentralManager_":{"name":"centralManager","abstract":"<p>The BLE central manager.</p>","parent_name":"MBTBluetoothManager"},"Classes/MBTBluetoothManager.html#/s:vC22MyBrainTechnologiesSDK19MBTBluetoothManager13blePeripheralGSQCSo12CBPeripheral_":{"name":"blePeripheral","abstract":"<p>The BLE peripheral with which a connection has been established.</p>","parent_name":"MBTBluetoothManager"},"Classes/MBTBluetoothManager.html#/s:vC22MyBrainTechnologiesSDK19MBTBluetoothManager11isConnectedSb":{"name":"isConnected","abstract":"<p>A <em>Bool</em> indicating the connection status.</p>","parent_name":"MBTBluetoothManager"},"Classes/MBTBluetoothManager.html#/s:vC22MyBrainTechnologiesSDK19MBTBluetoothManager16isListeningToEEGSb":{"name":"isListeningToEEG","abstract":"<p>A <em>Bool</em> indicating if SDK is listening to EEG Headset notifications.</p>","parent_name":"MBTBluetoothManager"},"Classes/MBTBluetoothManager.html#/s:vC22MyBrainTechnologiesSDK19MBTBluetoothManager10deviceNameGSQCSo8NSString_":{"name":"deviceName","abstract":"<p>The headset bluetooth profile name to connect to.</p>","parent_name":"MBTBluetoothManager"},"Classes/MBTBluetoothManager.html#/s:vC22MyBrainTechnologiesSDK19MBTBluetoothManager13eventDelegateGSQPS_25MBTBluetoothEventDelegate__":{"name":"eventDelegate","abstract":"<p>The MBTBluetooth Event Delegate.</p>","parent_name":"MBTBluetoothManager"},"Classes/MBTBluetoothManager.html#/s:vC22MyBrainTechnologiesSDK19MBTBluetoothManager17audioA2DPDelegateGSqPS_24MBTBluetoothA2DPDelegate__":{"name":"audioA2DPDelegate","abstract":"<p>The MBT Audio A2DP Delegate.","parent_name":"MBTBluetoothManager"},"Classes/MBTBluetoothManager.html#/s:FC22MyBrainTechnologiesSDK19MBTBluetoothManager9connectToFTSS4withPS_25MBTBluetoothEventDelegate_3andGSqPS_24MBTBluetoothA2DPDelegate___T_":{"name":"connectTo(_:with:and:)","abstract":"<p>Intialize <em>centralManager</em>, <em>deviceName</em> and <em>eventDelegate</em>.</p>","parent_name":"MBTBluetoothManager"},"Classes/MBTBluetoothManager.html#/s:FC22MyBrainTechnologiesSDK19MBTBluetoothManager10disconnectFT_T_":{"name":"disconnect()","abstract":"<p>Disconnect centralManager, and remove session&rsquo;s values.</p>","parent_name":"MBTBluetoothManager"},"Classes/MBTBluetoothManager.html#/s:FC22MyBrainTechnologiesSDK19MBTBluetoothManager28centralManagerDidUpdateStateFCSo16CBCentralManagerT_":{"name":"centralManagerDidUpdateState(_:)","abstract":"<p>Check status of BLE hardware. Invoked when the central","parent_name":"MBTBluetoothManager"},"Classes/MBTBluetoothManager.html#/s:FC22MyBrainTechnologiesSDK19MBTBluetoothManager14centralManagerFTCSo16CBCentralManager11didDiscoverCSo12CBPeripheral17advertisementDataGVs10DictionarySSP__4rssiCSo8NSNumber_T_":{"name":"centralManager(_:didDiscover:advertisementData:rssi:)","abstract":"<p>Check out the discovered peripherals to find the right device.","parent_name":"MBTBluetoothManager"},"Classes/MBTBluetoothManager.html#/s:FC22MyBrainTechnologiesSDK19MBTBluetoothManager14centralManagerFTCSo16CBCentralManager10didConnectCSo12CBPeripheral_T_":{"name":"centralManager(_:didConnect:)","abstract":"<p>Discover services of the peripheral.","parent_name":"MBTBluetoothManager"},"Classes/MBTBluetoothManager.html#/s:FC22MyBrainTechnologiesSDK19MBTBluetoothManager14centralManagerFTCSo16CBCentralManager23didDisconnectPeripheralCSo12CBPeripheral5errorGSqPs5Error___T_":{"name":"centralManager(_:didDisconnectPeripheral:error:)","abstract":"<p>If disconnected by error, start searching again,","parent_name":"MBTBluetoothManager"},"Classes/MBTBluetoothManager.html#/s:FC22MyBrainTechnologiesSDK19MBTBluetoothManager14centralManagerFTCSo16CBCentralManager16didFailToConnectCSo12CBPeripheral5errorGSqPs5Error___T_":{"name":"centralManager(_:didFailToConnect:error:)","abstract":"<p>If connection failed, call the event delegate","parent_name":"MBTBluetoothManager"},"Classes/MBTBluetoothManager.html#/s:FC22MyBrainTechnologiesSDK19MBTBluetoothManager10peripheralFTCSo12CBPeripheral19didDiscoverServicesGSqPs5Error___T_":{"name":"peripheral(_:didDiscoverServices:)","abstract":"<p>Check if the service discovered is a valid Service.","parent_name":"MBTBluetoothManager"},"Classes/MBTBluetoothManager.html#/s:FC22MyBrainTechnologiesSDK19MBTBluetoothManager10peripheralFTCSo12CBPeripheral29didDiscoverCharacteristicsForCSo9CBService5errorGSqPs5Error___T_":{"name":"peripheral(_:didDiscoverCharacteristicsFor:error:)","abstract":"<p>Enable notification and sensor for desired characteristic of valid service.","parent_name":"MBTBluetoothManager"},"Classes/MBTBluetoothManager.html#/s:FC22MyBrainTechnologiesSDK19MBTBluetoothManager10peripheralFTCSo12CBPeripheral17didUpdateValueForCSo16CBCharacteristic5errorGSqPs5Error___T_":{"name":"peripheral(_:didUpdateValueFor:error:)","abstract":"<p>Get data values when they are updated.","parent_name":"MBTBluetoothManager"},"Classes/MBTBluetoothManager.html#/s:FC22MyBrainTechnologiesSDK19MBTBluetoothManager10peripheralFTCSo12CBPeripheral29didUpdateNotificationStateForCSo16CBCharacteristic5errorGSqPs5Error___T_":{"name":"peripheral(_:didUpdateNotificationStateFor:error:)","abstract":"<p>Check if the notification status changed.","parent_name":"MBTBluetoothManager"},"Classes/MBTBluetoothManager.html#/s:FC22MyBrainTechnologiesSDK19MBTBluetoothManager17audioChangedRouteFV10Foundation12NotificationT_":{"name":"audioChangedRoute(_:)","abstract":"<p>Audio A2DP changing route output handler.</p>","parent_name":"MBTBluetoothManager"},"Classes/MBTBluetoothManager.html":{"name":"MBTBluetoothManager","abstract":"<p>Manage for the SDK the MBT Headset Bluetooth Part (connection/deconnection).</p>"},"Classes/MBTAcquisitionManager.html":{"name":"MBTAcquisitionManager","abstract":"<p>Manage Acquisition data MBT Headset part. Such as EEG,"},"Classes/MelomindEngine.html":{"name":"MelomindEngine","abstract":"<p>MBT engine to implement to work with the headset.</p>"},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Protocols.html":{"name":"Protocols","abstract":"<p>The following protocols are available globally.</p>"},"Structs.html":{"name":"Structs","abstract":"<p>The following structs are available globally.</p>"}}